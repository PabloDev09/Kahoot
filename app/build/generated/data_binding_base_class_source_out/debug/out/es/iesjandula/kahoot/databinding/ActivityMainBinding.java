// Generated by view binder compiler. Do not edit!
package es.iesjandula.kahoot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import es.iesjandula.kahoot.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Toolbar appBar;

  @NonNull
  public final ImageView appBarIcon;

  @NonNull
  public final Button btnJugar;

  @NonNull
  public final CardView cardContainerButtons;

  @NonNull
  public final TextView cardTitle;

  @NonNull
  public final TextView footer;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView tvKahoot;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Toolbar appBar,
      @NonNull ImageView appBarIcon, @NonNull Button btnJugar,
      @NonNull CardView cardContainerButtons, @NonNull TextView cardTitle, @NonNull TextView footer,
      @NonNull ConstraintLayout main, @NonNull TextView tvKahoot) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.appBarIcon = appBarIcon;
    this.btnJugar = btnJugar;
    this.cardContainerButtons = cardContainerButtons;
    this.cardTitle = cardTitle;
    this.footer = footer;
    this.main = main;
    this.tvKahoot = tvKahoot;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      Toolbar appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.appBarIcon;
      ImageView appBarIcon = ViewBindings.findChildViewById(rootView, id);
      if (appBarIcon == null) {
        break missingId;
      }

      id = R.id.btnJugar;
      Button btnJugar = ViewBindings.findChildViewById(rootView, id);
      if (btnJugar == null) {
        break missingId;
      }

      id = R.id.cardContainerButtons;
      CardView cardContainerButtons = ViewBindings.findChildViewById(rootView, id);
      if (cardContainerButtons == null) {
        break missingId;
      }

      id = R.id.cardTitle;
      TextView cardTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardTitle == null) {
        break missingId;
      }

      id = R.id.footer;
      TextView footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvKahoot;
      TextView tvKahoot = ViewBindings.findChildViewById(rootView, id);
      if (tvKahoot == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appBar, appBarIcon, btnJugar,
          cardContainerButtons, cardTitle, footer, main, tvKahoot);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
